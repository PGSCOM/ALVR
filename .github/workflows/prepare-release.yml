name: Create release1

env:
  CARGO_TERM_COLOR: always

on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  prepare_release:
    runs-on: windows-2022
    outputs:
      release_ref: ${{ steps.output_ref.outputs.release_ref }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Configure git
        run: git config --global core.autocrlf false

      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Output ref for later checkouts
        id: output_ref
        run: echo "::set-output name=release_ref::$(git rev-parse HEAD)"

  build_windows_streamer:
    runs-on: windows-2022
    needs: [prepare_release]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare_release.outputs.release_ref }}
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install zip unzip pkgconfiglite wixtoolset

      - name: Build and package ALVR
        id: build
        env:
          RUST_BACKTRACE: 1
        run: |
          cargo xtask package-streamer --gpl --ci
          cargo xtask package-launcher --ci

      - name: Upload streamer
        uses: actions/upload-artifact@v4
        with:
          name: alvr_streamer_windows.zip
          path: ./build/alvr_streamer_windows.zip

      - name: Upload launcher
        uses: actions/upload-artifact@v4
        with:
          name: alvr_launcher_windows.zip
          path: ./build/alvr_launcher_windows.zip

  build_linux_streamer:
    runs-on: ubuntu-22.04
    needs: [prepare_release]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare_release.outputs.release_ref }}
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build and install dependencies
        env:
          RUST_BACKTRACE: 1
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 25088A0359807596
          echo "deb http://ppa.launchpad.net/pipewire-debian/pipewire-upstream/ubuntu $(lsb_release -cs) main" | sudo tee -a /etc/apt/sources.list.d/pipewire-upstream.list
          sudo apt-get update
          sudo apt-get install libfuse2 build-essential pkg-config nasm libva-dev libdrm-dev libvulkan-dev libx264-dev libx265-dev cmake libasound2-dev libjack-jackd2-dev libxrandr-dev libunwind-dev libffmpeg-nvenc-dev nvidia-cuda-toolkit libgtk-3-dev libpipewire-0.3-dev libspa-0.2-dev
          cp alvr/xtask/deb/cuda.pc /usr/share/pkgconfig

      - name: Build and package ALVR (.tar.gz)
        id: build
        env:
          RUST_BACKTRACE: 1
        run: |
          cargo xtask package-streamer --gpl --ci
          cargo xtask package-launcher --ci

      - name: Upload streamer (tar.gz)
        uses: actions/upload-artifact@v4
        with:
          name: alvr_streamer_linux.tar.gz
          path: ./build/alvr_streamer_linux.tar.gz

      - name: Upload launcher
        uses: actions/upload-artifact@v4
        with:
          name: alvr_launcher_linux.tar.gz
          path: ./build/alvr_launcher_linux.tar.gz

  build_flatpak_bundle:
    runs-on: ubuntu-latest
    needs: [prepare_release]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare_release.outputs.release_ref }}
          submodules: true

      - name: Build and install dependencies
        env:
          RUST_BACKTRACE: 1
        run: |
          sudo apt-get update
          sudo apt-get install flatpak flatpak-builder
          sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

      - name: Build and package ALVR flatpak (.flatpak)
        id: build_flatpak
        run: |
          sudo flatpak-builder --repo=.flatpak-repo --install-deps-from=flathub --force-clean --default-branch=stable --arch=x86_64 .flatpak-build-dir alvr/xtask/flatpak/com.valvesoftware.Steam.Utility.alvr.json
          flatpak build-bundle .flatpak-repo com.valvesoftware.Steam.Utility.alvr.flatpak com.valvesoftware.Steam.Utility.alvr stable --runtime

      - name: Upload flatpak streamer for Linux
        uses: actions/upload-artifact@v4
        with:
          name: com.valvesoftware.Steam.Utility.alvr.flatpak
          path: com.valvesoftware.Steam.Utility.alvr.flatpak

  build_android_client:
    runs-on: ubuntu-latest
    needs: [prepare_release]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare_release.outputs.release_ref }}
          submodules: true
        
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-linux-android
          override: true
      - uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: "17"
      - uses: android-actions/setup-android@v3
        with:
          packages: "platforms;android-32"
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26b

      - name: Build and package ALVR
        id: build
        env:
          RUST_BACKTRACE: 1
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: cargo xtask package-client --ci

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: alvr_client_android
          path: /home/runner/work/ALVR/ALVR/target/distribution/apk/alvr_client_openxr.apk
